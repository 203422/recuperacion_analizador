
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DOT FMT FUNC IDENTIFIER IMPORT LBRACE LPAREN MAIN RBRACE RPAREN SEMICOLON STRING_LITERALprogram : import_statement function_definitionimport_statement : IMPORT STRING_LITERALfunction_definition : FUNC MAIN LPAREN RPAREN blockblock : LBRACE statements RBRACEstatements : statement\n                  | statement statementsstatement : expressionexpression : FMT DOT IDENTIFIER LPAREN expression_list RPARENexpression_list : STRING_LITERAL\n                       | emptyempty :'
    
_lr_action_items = {'IMPORT':([0,],[3,]),'$end':([1,4,10,16,],[0,-1,-3,-4,]),'FUNC':([2,6,],[5,-2,]),'STRING_LITERAL':([3,20,],[6,22,]),'MAIN':([5,],[7,]),'LPAREN':([7,19,],[8,20,]),'RPAREN':([8,20,21,22,23,],[9,-11,24,-9,-10,]),'LBRACE':([9,],[11,]),'FMT':([11,13,14,24,],[15,15,-7,-8,]),'RBRACE':([12,13,14,17,24,],[16,-5,-7,-6,-8,]),'DOT':([15,],[18,]),'IDENTIFIER':([18,],[19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'import_statement':([0,],[2,]),'function_definition':([2,],[4,]),'block':([9,],[10,]),'statements':([11,13,],[12,17,]),'statement':([11,13,],[13,13,]),'expression':([11,13,],[14,14,]),'expression_list':([20,],[21,]),'empty':([20,],[23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> import_statement function_definition','program',2,'p_program','app.py',42),
  ('import_statement -> IMPORT STRING_LITERAL','import_statement',2,'p_import_statement','app.py',45),
  ('function_definition -> FUNC MAIN LPAREN RPAREN block','function_definition',5,'p_function_definition','app.py',48),
  ('block -> LBRACE statements RBRACE','block',3,'p_block','app.py',51),
  ('statements -> statement','statements',1,'p_statements','app.py',54),
  ('statements -> statement statements','statements',2,'p_statements','app.py',55),
  ('statement -> expression','statement',1,'p_statement','app.py',58),
  ('expression -> FMT DOT IDENTIFIER LPAREN expression_list RPAREN','expression',6,'p_expression','app.py',61),
  ('expression_list -> STRING_LITERAL','expression_list',1,'p_expression_list','app.py',64),
  ('expression_list -> empty','expression_list',1,'p_expression_list','app.py',65),
  ('empty -> <empty>','empty',0,'p_empty','app.py',68),
]
